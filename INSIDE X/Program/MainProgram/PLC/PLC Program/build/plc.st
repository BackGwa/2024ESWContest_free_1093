TYPE
  LOGLEVEL : (CRITICAL, WARNING, INFO, DEBUG) := INFO;
END_TYPE

FUNCTION_BLOCK LOGGER
  VAR_INPUT
    TRIG : BOOL;
    MSG : STRING;
    LEVEL : LOGLEVEL := INFO;
  END_VAR
  VAR
    TRIG0 : BOOL;
  END_VAR

  IF TRIG AND NOT TRIG0 THEN
  {{
   LogMessage(GetFbVar(LEVEL),(char*)GetFbVar(MSG, .body),GetFbVar(MSG, .len));
  }}
  END_IF;
  TRIG0:=TRIG;
END_FUNCTION_BLOCK


PROGRAM program0
  VAR
    PBS : BOOL;
    EMS : BOOL;
    PS1 : BOOL;
    PS2 : BOOL;
    PS3 : BOOL;
    IS1 : BOOL;
    CONV : BOOL;
    CYN : BOOL;
    RL : BOOL;
    YL : BOOL;
    GL : BOOL;
    SEQUENCE_1 : BOOL;
    SEQUENCE_2 : BOOL;
    SEQUENCE_3 : BOOL;
    RST : BOOL;
    SEQUENCE_4 : BOOL;
    IS_METAL : BOOL;
    IS_NON_METAL : BOOL;
    FLICKER : BOOL;
    SEQ_WAIT : BOOL;
    SEQ_WAIT_2 : BOOL;
  END_VAR
  VAR
    TON0 : TON;
    TON1 : TON;
    TON2 : TON;
    TON3 : TON;
    TON4 : TON;
    TON5 : TON;
  END_VAR

  SEQUENCE_1 := (NOT(IS1) AND PS3 AND PS2 AND NOT(PS1) AND NOT(PBS) OR SEQUENCE_1) AND EMS AND NOT(RST);
  CONV := SEQUENCE_1;
  TON0(IN := SEQ_WAIT, PT := t#450ms);
  SEQUENCE_2 := EMS AND NOT(RST) AND SEQUENCE_2 OR TON0.Q;
  IS_METAL := EMS AND NOT(RST) AND (IS_METAL OR NOT(IS_NON_METAL) AND IS1 AND SEQUENCE_2);
  TON1(IN := IS_METAL, PT := t#500ms);
  SEQUENCE_3 := NOT(SEQUENCE_4) AND TON1.Q;
  TON2(IN := SEQUENCE_3 AND EMS AND NOT(RST), PT := t#100ms);
  SEQUENCE_4 := SEQUENCE_4 AND EMS AND NOT(RST) OR TON2.Q;
  TON3(IN := SEQ_WAIT_2, PT := t#2s);
  RST := SEQUENCE_4 OR TON3.Q;
  IS_NON_METAL := EMS AND NOT(RST) AND (IS_NON_METAL OR NOT(IS_METAL) AND NOT(IS1) AND SEQUENCE_2);
  GL := NOT(PS1);
  RL := NOT(EMS);
  TON4(IN := NOT(FLICKER) AND SEQUENCE_1, PT := t#1s);
  YL := TON4.Q;
  TON5(IN := YL, PT := t#1s);
  FLICKER := TON5.Q;
  SEQ_WAIT := EMS AND NOT(RST) AND (NOT(PS2) AND SEQUENCE_1 OR SEQ_WAIT);
  SEQ_WAIT_2 := EMS AND NOT(RST) AND (NOT(PS3) AND IS_NON_METAL OR SEQ_WAIT_2);
  CYN := SEQUENCE_3;
END_PROGRAM


CONFIGURATION Config0

  RESOURCE Res0 ON PLC
    TASK task0(INTERVAL := T#20ms,PRIORITY := 0);
    PROGRAM instance0 WITH task0 : program0;
  END_RESOURCE
END_CONFIGURATION
